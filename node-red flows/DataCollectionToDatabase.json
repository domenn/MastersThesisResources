[{"id":"685f085f.4e9958","type":"subflow","name":"GetAirSensorDataReal","info":"Queries the device for temperature and humidity data.\n\nOutputs:\n\t* Output1 (only if OK): original message \n\t\t* resultTemperature - temperature\n\t\t* resultHumidity - humidity\n\t\t* payload - raw response from the device, in form of json\n\t* Output2 (only if OK): temperature on payload (message is lost)\n\t* Output3 (only if OK): humidity on payload (message is lost)\n\t* Output4 (only if error): original object with error info attached\n\t\t* originalError - the error that was returned by node\n\t\t* payload - user friendly error message\n\nReturned msg - other properties\n\t* requesting_node - last http-get node that processed the message. Useful when handling error to see where it arised.\n\t* processing_step - Last attempted step. Useful for error handling. Can be \"during refresh request\" or \"during query for the info\".\n\n\nTo query, pass any message to the input.","category":"","in":[{"x":80,"y":380,"wires":[{"id":"8db1efaa.9ad05"}]}],"out":[{"x":880,"y":360,"wires":[{"id":"a1a52324.a2bee","port":0}]},{"x":860,"y":420,"wires":[{"id":"a1a52324.a2bee","port":1}]},{"x":860,"y":480,"wires":[{"id":"a1a52324.a2bee","port":2}]},{"x":1060,"y":120,"wires":[{"id":"f86a0bb6.b6d0b8","port":0},{"id":"cfe8f14b.93dc7","port":0}]}]},{"id":"c3d0e074.03fa8","type":"switch","z":"685f085f.4e9958","name":"","property":"payload","propertyType":"msg","rules":[{"t":"regex","v":"^Error[\\s\\S]*","vt":"str","case":false},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":370,"y":200,"wires":[["f86a0bb6.b6d0b8"],["1072976a.3baad9"]],"outputLabels":["Error out","Useful out"]},{"id":"8db1efaa.9ad05","type":"http request","z":"685f085f.4e9958","name":"SensorTaskRefreshRequest","method":"GET","ret":"txt","url":"http://192.168.1.241/control?cmd=event,temperatureQuery","tls":"","x":240,"y":380,"wires":[["77ad20e1.01d0c"]]},{"id":"c44385f9.b82f58","type":"http request","z":"685f085f.4e9958","name":"GetTempAndHumiJson","method":"GET","ret":"txt","url":"http://192.168.1.241/json?tasknr=1","tls":"","x":490,"y":280,"wires":[["c8f1a2da.a90d3"]]},{"id":"c8f1a2da.a90d3","type":"switch","z":"685f085f.4e9958","name":"","property":"payload","propertyType":"msg","rules":[{"t":"regex","v":"^Error[\\s\\S]*","vt":"str","case":false},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":670,"y":280,"wires":[["f86a0bb6.b6d0b8"],["1c4d6bee.ef40e4"]],"outputLabels":["Error out","Useful out"]},{"id":"1c4d6bee.ef40e4","type":"json","z":"685f085f.4e9958","name":"Json data parser","property":"payload","action":"obj","pretty":false,"x":650,"y":340,"wires":[["a1a52324.a2bee"]],"outputLabels":["ms"]},{"id":"a1a52324.a2bee","type":"function","z":"685f085f.4e9958","name":"DhtSensorDataExtractor","func":"\nvar values = msg.payload.TaskValues;\n\nvar tmp = values.find(obj => obj.Name === 'Temperature').Value\nvar hum = values.find(obj => obj.Name === 'Humidity').Value\n\nmsg.resultTemperature = tmp;\nmsg.resultHumidity = hum;\n\n\nvar tmpMsg = { payload: tmp };\nvar humidityMsg = { payload: hum };\n\nif (isNaN(msg.resultTemperature) || isNaN(msg.resultHumidity)){\n    node.error(\"At least one value is NAN: temperature \" + msg.resultTemperature + \"; humidity: \" + msg.resultHumidity, msg);\n    return null;\n}\n\nreturn [msg, tmpMsg, humidityMsg];","outputs":3,"noerr":0,"x":670,"y":420,"wires":[[],[],[]]},{"id":"779d05a0.7de88c","type":"comment","z":"685f085f.4e9958","name":"IDEA: i18n for GUI message","info":"","x":160,"y":40,"wires":[]},{"id":"77ad20e1.01d0c","type":"change","z":"685f085f.4e9958","name":"Add message info - refresh","rules":[{"t":"set","p":"requesting_node","pt":"msg","to":"SensorTaskRefreshRequest","tot":"str"},{"t":"set","p":"processing_step","pt":"msg","to":"Step1: Request temperature read","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":240,"y":160,"wires":[["c3d0e074.03fa8"]]},{"id":"1072976a.3baad9","type":"change","z":"685f085f.4e9958","name":"Add message info - query","rules":[{"t":"set","p":"requesting_node","pt":"msg","to":"GetTempAndHumiJson","tot":"str"},{"t":"set","p":"processing_step","pt":"msg","to":"Step2: Get temperature data from device","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":470,"y":240,"wires":[["c44385f9.b82f58"]]},{"id":"243bc6f2.c17b3a","type":"catch","z":"685f085f.4e9958","name":"CatchNanError","scope":["a1a52324.a2bee"],"x":440,"y":60,"wires":[["4f17b6eb.80e5f8"]]},{"id":"f86a0bb6.b6d0b8","type":"change","z":"685f085f.4e9958","name":"Prepare error message - cannot connect","rules":[{"t":"set","p":"originalError","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"Cannot connect to the device! Is device ready?","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":840,"y":180,"wires":[[]]},{"id":"4f17b6eb.80e5f8","type":"change","z":"685f085f.4e9958","name":"Prepare error message - NAN","rules":[{"t":"set","p":"originalError","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"error.message","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":670,"y":100,"wires":[["cfe8f14b.93dc7"]]},{"id":"cfe8f14b.93dc7","type":"json","z":"685f085f.4e9958","name":"convertProblematicObjectToString","property":"originalError","action":"str","pretty":false,"x":1000,"y":40,"wires":[[]]},{"id":"c96bee6d.774db","type":"catch","z":"685f085f.4e9958","name":"CatchHttpError","scope":["c44385f9.b82f58","8db1efaa.9ad05"],"x":280,"y":580,"wires":[[]]},{"id":"7c34c6f9.83fc38","type":"comment","z":"685f085f.4e9958","name":"Ignore http connect error since we handle it on output of node.","info":"","x":420,"y":540,"wires":[]},{"id":"c2866783.537e38","type":"function","z":"f4e484b9.83c0d8","name":"StringifyMsg","func":"var strd = JSON.stringify(msg);\n\nreturn {payload:strd, error_kind: msg.error_kind};","outputs":1,"noerr":0,"x":930,"y":540,"wires":[["87a095af.2a2168","9be9af01.c6e8b"]]},{"id":"eb8908b6.269fd8","type":"inject","z":"f4e484b9.83c0d8","name":"DatabaseWriterToggle","topic":"dCustomLogger","payload":"_LogToggle","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":900,"y":40,"wires":[["cad2b77d.da8568"]]},{"id":"84e9eb8c.9f9538","type":"subflow:685f085f.4e9958","z":"f4e484b9.83c0d8","name":"EspRequestComposite","x":540,"y":60,"wires":[["53c0b628.5367f8","b6d4cc24.d671f"],[],[],["c5fc8be.19ec578","a11d1341.e82e"]]},{"id":"10b68cf0.420c43","type":"inject","z":"f4e484b9.83c0d8","name":"Temperature request timer","topic":"","payload":"","payloadType":"date","repeat":"101","crontab":"","once":false,"onceDelay":0.1,"x":300,"y":40,"wires":[["84e9eb8c.9f9538"]]},{"id":"5509caa7.9085b4","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"fixed","sql":"CREATE TABLE IF NOT EXISTS WeatherTable \n(Timestamp text, Temperature REAL, Humidity REAL);\n","name":"DbSetup_weatherData","x":280,"y":160,"wires":[["603bdf4.8a2662"]]},{"id":"bd4b4b2c.b39048","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"prepared","sql":"Insert into ExceptionTable values ($ErrorNode,\n$ProcessingStep,\n$ErrorText,\n$FriendlyErrorMessage,\nstrftime('%s', 'now'));\n\n\n-- CREATE TABLE IF NOT EXISTS ExceptionTable (ErrorNode text, ProcessingStep text, ErrorText text, FriendlyErrorMessage text, Timestamp text);","name":"InsertErrorToDb","x":760,"y":200,"wires":[[]]},{"id":"c5fc8be.19ec578","type":"function","z":"f4e484b9.83c0d8","name":"PrepareErrorInsert","func":"\nmsg.params={$ErrorNode:msg.requesting_node,\n$ProcessingStep:msg.processing_step,\n$ErrorText:msg.originalError,\n$FriendlyErrorMessage:msg.payload};\n\n\n//node.warn(JSON.stringify(msg, null, 2));\n\n\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":120,"wires":[["d12af4d1.01f3c8"]]},{"id":"d12af4d1.01f3c8","type":"function","z":"f4e484b9.83c0d8","name":"OnOffSwitch_defaultOn","func":"//dCustomLogger_LogToggle\n\nvar enabled = context.get('enabled');\nif(enabled == null) enabled = true;\n//node.warn(\"line 5\");\n//\nif( (msg.payload === \"_LogToggle\" && msg.topic == \"dCustomLogger\")||\n        (msg.payload === \"event_shutdown\")){\n//    node.warn(\"enabled is \" + enabled.toString() + \" ;; setting context to \" + !enabled);\n    context.set('enabled', !enabled);\n //   node.warn(\"line 9\");\n //   node.warn(\"Context en is \" + context.get('enabled'));\n    var sText = enabled?\"off\":\"on\";\n    node.status({fill:\"red\",shape:\"ring\",text:sText});\n //   log.warn(\"status set\");\n    return null;\n}\n\nif(!enabled) return null;\n\n//node.log(msg.payload + \" log\")\n\nreturn msg;","outputs":1,"noerr":0,"x":730,"y":160,"wires":[["bd4b4b2c.b39048"]]},{"id":"c8133dfc.fc398","type":"inject","z":"f4e484b9.83c0d8","name":"DatabaseWriterToggle","topic":"dCustomLogger","payload":"_LogToggle","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":520,"y":200,"wires":[["d12af4d1.01f3c8"]]},{"id":"d8726b44.95bc48","type":"inject","z":"f4e484b9.83c0d8","name":"Startup inject","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":250,"y":120,"wires":[["5509caa7.9085b4","40f82331.d1915c"]]},{"id":"603bdf4.8a2662","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"fixed","sql":"CREATE TABLE IF NOT EXISTS ExceptionTable (ErrorNode text, ProcessingStep text, ErrorText text, FriendlyErrorMessage text, Timestamp text);\n","name":"DbSetup_exception","x":270,"y":200,"wires":[["89ef8ee0.f1206"]]},{"id":"48db2034.3af8d","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"prepared","sql":"Insert into WeatherTable values (\nstrftime('%s', 'now'), $Temperature, $Humidity);","name":"InsertAtmosphereInfo","x":1160,"y":100,"wires":[[]]},{"id":"53c0b628.5367f8","type":"function","z":"f4e484b9.83c0d8","name":"PrepareInfoInsert","func":"\nmsg.params={$Temperature:msg.resultTemperature,\n$Humidity:msg.resultHumidity\n    \n};\n\n\n//node.warn(JSON.stringify(msg, null, 2));\n\n\nreturn msg;","outputs":1,"noerr":0,"x":890,"y":80,"wires":[["cad2b77d.da8568"]]},{"id":"cad2b77d.da8568","type":"function","z":"f4e484b9.83c0d8","name":"OnOffSwitch_defaultOn","func":"//dCustomLogger_LogToggle\n\nvar enabled = context.get('enabled');\nif(enabled == null) enabled = true;\n//node.warn(\"line 5\");\n//\nif( (msg.payload === \"_LogToggle\" && msg.topic == \"dCustomLogger\")||\n        (msg.payload === \"event_shutdown\")){\n//    node.warn(\"enabled is \" + enabled.toString() + \" ;; setting context to \" + !enabled);\n    context.set('enabled', !enabled);\n //   node.warn(\"line 9\");\n //   node.warn(\"Context en is \" + context.get('enabled'));\n    var sText = enabled?\"off\":\"on\";\n    node.status({fill:\"red\",shape:\"ring\",text:sText});\n //   log.warn(\"status set\");\n    return null;\n}\n\nif(!enabled) return null;\n\n//node.log(msg.payload + \" log\")\n\nreturn msg;","outputs":1,"noerr":0,"x":1130,"y":60,"wires":[["48db2034.3af8d"]]},{"id":"a11d1341.e82e","type":"link out","z":"f4e484b9.83c0d8","name":"linkErrorHandlerRequestPinInput","links":["cbd0e718.479958"],"x":675,"y":80,"wires":[]},{"id":"cbd0e718.479958","type":"link in","z":"f4e484b9.83c0d8","name":"linkErrorHandlerRequestPinOutput","links":["a11d1341.e82e"],"x":375,"y":540,"wires":[["dcdbc75b.59b1c8"]]},{"id":"dcdbc75b.59b1c8","type":"change","z":"f4e484b9.83c0d8","name":"setErrorKindRequest","rules":[{"t":"set","p":"error_kind","pt":"msg","to":"request","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":520,"y":540,"wires":[["bace5f1f.d378","e95ecdb3.f5842"]]},{"id":"bace5f1f.d378","type":"function","z":"f4e484b9.83c0d8","name":"SetTimestamp","func":"var m = new Date();\n\nvar humanDt =\n\n(\"0\" + m.getDate()).slice(-2) + \".\" +\n(\"0\" + (m.getMonth()+1)).slice(-2) + \".\" +\n    m.getFullYear() + \" \" +\n    \n    \n    (\"0\" + m.getHours()).slice(-2) + \":\" +\n    (\"0\" + m.getMinutes()).slice(-2) + \":\" +\n    (\"0\" + m.getSeconds()).slice(-2) + \".\" + m.getMilliseconds();\n\nmsg._timeStamp = m.getTime();\nmsg._humanTimeStamp = humanDt;\n\nreturn msg;","outputs":1,"noerr":0,"x":740,"y":540,"wires":[["c2866783.537e38"]]},{"id":"87a095af.2a2168","type":"debug","z":"f4e484b9.83c0d8","name":"DebugErrorReporting","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1160,"y":540,"wires":[]},{"id":"fead555c.633008","type":"inject","z":"f4e484b9.83c0d8","name":"ErrorSimCannotConnect","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":560,"wires":[["dd11df18.8b1d9"]]},{"id":"dd11df18.8b1d9","type":"change","z":"f4e484b9.83c0d8","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"_msgid\":\"33d2c7fa.758448\",\"topic\":\"\",\"payload\":\"Cannot connect to the device! Is device ready?\",\"statusCode\":\"ETIMEDOUT\",\"requesting_node\":\"SensorTaskRefreshRequest\",\"processing_step\":\"Step1: Request temperature read\",\"originalError\":\"Error: connect ETIMEDOUT 192.168.1.241:80 : http://192.168.1.241/control?cmd=event,temperatureQuery\",\"_event\":\"node:66114039.9a4b4\",\"error_kind\":\"request\"}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":140,"y":500,"wires":[["f49c09e5.0a82f8"]]},{"id":"f49c09e5.0a82f8","type":"function","z":"f4e484b9.83c0d8","name":"payloadToMsg","func":"\nvar _return = msg.payload;\n//_return._timestamp = new Date();\n\nreturn _return;","outputs":1,"noerr":0,"x":520,"y":620,"wires":[["bace5f1f.d378","e95ecdb3.f5842"]]},{"id":"9be9af01.c6e8b","type":"change","z":"f4e484b9.83c0d8","name":"StoreErrorToFlow","rules":[{"t":"move","p":"ht_error3","pt":"flow","to":"ht_error4","tot":"flow"},{"t":"move","p":"ht_error2","pt":"flow","to":"ht_error3","tot":"flow"},{"t":"move","p":"ht_error1","pt":"flow","to":"ht_error2","tot":"flow"},{"t":"move","p":"ht_error","pt":"flow","to":"ht_error1","tot":"flow"},{"t":"move","p":"payload","pt":"msg","to":"ht_error","tot":"flow"},{"t":"set","p":"err_cnt","pt":"flow","to":"$flowContext('err_cnt')+1","tot":"jsonata"},{"t":"set","p":"payload","pt":"msg","to":"err_cnt","tot":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":1050,"y":580,"wires":[["382f78b6.6367b8","f848768f.81e728"]]},{"id":"b6d4cc24.d671f","type":"change","z":"f4e484b9.83c0d8","name":"ErrorCounterToZero","rules":[{"t":"set","p":"err_cnt","pt":"flow","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":900,"y":120,"wires":[["34a84d7b.8880e2"]]},{"id":"40f82331.d1915c","type":"set-defaults","z":"f4e484b9.83c0d8","name":"ErrorCounterInitial","rules":[{"p":"err_cnt","pt":"flow","to":"0","tot":"num"}],"chbox_DoOutputToMessage":false,"chbox_SetCurrentToMsg":false,"howSend":{"text":"payload","type":"msg","modifiedValue":"payload"},"dropdown_HowManyMessages":"single","dropdownObjOrVal":"value","outputs":1,"x":450,"y":120,"wires":[[]]},{"id":"382f78b6.6367b8","type":"switch","z":"f4e484b9.83c0d8","name":"PassIfErrCntIs3","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"3","vt":"str"},{"t":"gt","v":"6","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":840,"y":620,"wires":[["28c86fe0.95dfa"],["68a889ff.482f38"]]},{"id":"3aa1c682.4d597a","type":"function","z":"f4e484b9.83c0d8","name":"PrepareMail","func":"var m = new Date();\nvar humanDt =\n\n(\"0\" + m.getDate()).slice(-2) + \".\" +\n(\"0\" + (m.getMonth()+1)).slice(-2) + \".\" +\n    m.getFullYear() + \" \" +\n    \n    \n    (\"0\" + m.getHours()).slice(-2) + \":\" +\n    (\"0\" + m.getMinutes()).slice(-2) + \":\" +\n    (\"0\" + m.getSeconds()).slice(-2) + \".\" + m.getMilliseconds();\n\nvar ts = m.getTime();\nvar humanTs = humanDt;\n\nvar ht_error = flow.get(\"ht_error\");\nvar ht_error1 = flow.get(\"ht_error1\");\nvar ht_error2 = flow.get(\"ht_error2\");\nvar ht_error3 = flow.get(\"ht_error3\");\nvar ht_error4 = flow.get(\"ht_error4\");\n//var ht_error5 = flow.get(\"ht_error5\");\n\nvar txt = \"Errors in node-red flows. Will now attempt to reboot device over serial. \\n\\nLatest errors are (from earliest to newest): \\n\\n\"\n// + ht_error5 + \"\\n\\n\"\n + ht_error4 + \"\\n\\n\"\n + ht_error3 + \"\\n\\n\"\n + ht_error2 + \"\\n\\n\"\n + ht_error1 + \"\\n\\n\"\n + ht_error + \"\\n\\n\"\n +\"Current timestamp is: \" + ts.toString() + \" which in human format (Slovenia's timezone) is:\\n\"\n + humanTs + \"\\nNode-RED running on: \" + msg.env_machine_name;\n \nmsg.payload = txt;\nmsg.topic = \"Node-Red ESP devices error.\";\nmsg.from = [{ \"address\": \"noreply@noderednotify.si\", \"name\": \"NodeRed Notifier\" }];\n\nreturn msg;","outputs":1,"noerr":0,"x":1310,"y":620,"wires":[["1d3ee093.26d68f","8b25ba2e.dc9b98","51d6cdda.bbe5d4"]]},{"id":"1ea39cc6.c75d43","type":"inject","z":"f4e484b9.83c0d8","name":"SendMail","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1060,"y":660,"wires":[["3aa1c682.4d597a"]]},{"id":"1d3ee093.26d68f","type":"file","z":"f4e484b9.83c0d8","name":"MailExampleWriter","filename":"d_resources/noderedFiles/outMails.txt","appendNewline":true,"createDir":true,"overwriteFile":"false","x":1270,"y":700,"wires":[[]]},{"id":"e4cafbd4.e0df18","type":"e-mail","z":"f4e484b9.83c0d8","server":"smtp.eu.mailgun.org","port":"587","secure":false,"name":"domen.mory@gmail.com","dname":"MailgunEuOut","x":980,"y":700,"wires":[]},{"id":"63fc3452.4bfa6c","type":"comment","z":"f4e484b9.83c0d8","name":"Count errors .. if 3 in a row, send the mail. ","info":"","x":480,"y":500,"wires":[]},{"id":"3fd05a81.d487e6","type":"link in","z":"f4e484b9.83c0d8","name":"LinkIntoLogToFile","links":["76e1dc19.dd5044","2e5ed0a9.264db"],"x":335,"y":620,"wires":[["e95ecdb3.f5842"]]},{"id":"2260e471.7f9f0c","type":"function","z":"f4e484b9.83c0d8","name":"PrepareLogRebootOk","func":"\nreturn {payload: \"ESP request was OK, setting error count to 0. did_attempt_reboot val: \" + flow.get(\"did_attempt_reboot\") + \"; Node name: PrepareLogRebootOk\",\n    error_kind: \"Reboot OK\",\n    _not_an_error: true\n};","outputs":1,"noerr":0,"x":1160,"y":240,"wires":[["76e1dc19.dd5044","db732ed3.78d19"]]},{"id":"76e1dc19.dd5044","type":"link out","z":"f4e484b9.83c0d8","name":"linkToErrorWriter","links":["3fd05a81.d487e6"],"x":1315,"y":240,"wires":[]},{"id":"f848768f.81e728","type":"function","z":"f4e484b9.83c0d8","name":"PrepareLog","func":"\nreturn {payload: \"New error stored to flow. Err count incremented to: \" + flow.get(\"err_cnt\").toString(),\n    error_kind: \"Storing\",\n    _not_an_error: true\n};","outputs":1,"noerr":0,"x":1250,"y":580,"wires":[["2e5ed0a9.264db"]]},{"id":"2e5ed0a9.264db","type":"link out","z":"f4e484b9.83c0d8","name":"linkToErrorWriter","links":["3fd05a81.d487e6"],"x":1375,"y":580,"wires":[]},{"id":"28c86fe0.95dfa","type":"change","z":"f4e484b9.83c0d8","name":"Get machine name ENV","rules":[{"t":"set","p":"env_machine_name","pt":"msg","to":"NDEVNAME","tot":"env"}],"action":"","property":"","from":"","to":"","reg":false,"x":1090,"y":620,"wires":[["3aa1c682.4d597a"]]},{"id":"89ef8ee0.f1206","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"fixed","sql":"CREATE TABLE IF NOT EXISTS SerialLogsTable \n( \nSerialMsg text,\nTimestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\nID INTEGER PRIMARY KEY,\nHumanTimestamp text\n);","name":"DbSetup_serialLog","x":270,"y":240,"wires":[["9914c0b6.3227f"]]},{"id":"6706860d.f71c08","type":"serial out","z":"f4e484b9.83c0d8","name":"SerialToEsp","serial":"97f63480.dc8b68","x":1270,"y":760,"wires":[]},{"id":"e3167612.c19538","type":"serial in","z":"f4e484b9.83c0d8","name":"SerialFromEsp","serial":"97f63480.dc8b68","x":660,"y":340,"wires":[["596b2830.5b9db8"]]},{"id":"816cc211.3bf46","type":"function","z":"f4e484b9.83c0d8","name":"SetTimestamp","func":"var m = new Date();\n\nvar humanDt =\n\n(\"0\" + m.getDate()).slice(-2) + \".\" +\n(\"0\" + (m.getMonth()+1)).slice(-2) + \".\" +\n    m.getFullYear() + \" \" +\n    \n    \n    (\"0\" + m.getHours()).slice(-2) + \":\" +\n    (\"0\" + m.getMinutes()).slice(-2) + \":\" +\n    (\"0\" + m.getSeconds()).slice(-2) + \".\" + m.getMilliseconds();\n\nmsg.params.$ts = m.getTime() * 0.001;\nmsg.params.$hts = humanDt;\n\nreturn msg;","outputs":1,"noerr":0,"x":1020,"y":340,"wires":[["1260473f.34bc29"]]},{"id":"256a170c.bd25e8","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"prepared","sql":"insert into SerialLogsTable \n( \nSerialMsg,\nTimestamp,\nHumanTimestamp\n) values ($txt, $ts, $hts);","name":"SerialLogToDb","x":1000,"y":380,"wires":[[]]},{"id":"596b2830.5b9db8","type":"set-defaults","z":"f4e484b9.83c0d8","name":"PrepareDbInsert","rules":[{"t":"set","p":"params.$txt","pt":"msg","to":"payload","tot":"msg"}],"chbox_DoOutputToMessage":false,"chbox_SetCurrentToMsg":false,"howSend":{"text":"payload","type":"msg","modifiedValue":"payload"},"dropdown_HowManyMessages":"single","dropdownObjOrVal":"value","outputs":1,"x":840,"y":340,"wires":[["816cc211.3bf46"]]},{"id":"8b25ba2e.dc9b98","type":"function","z":"f4e484b9.83c0d8","name":"SerialRebootMsg","func":"\nflow.set(\"did_attempt_reboot\", true);\n\n\nmsg.payload = \"Reboot\\r\\n\";\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":740,"wires":[["6706860d.f71c08"]]},{"id":"f121ec79.5b25","type":"function","z":"f4e484b9.83c0d8","name":"PrepareRetryMail","func":"\nvar err_cnt = msg.payload;\nvar add_errors = \"\";\ntry{\nif (parseInt(err_cnt) % 7 !== 0){\n    return null;\n}\n}catch(err){\n}\n\nvar m = new Date();\nvar humanDt =\n\n(\"0\" + m.getDate()).slice(-2) + \".\" +\n(\"0\" + (m.getMonth()+1)).slice(-2) + \".\" +\n    m.getFullYear() + \" \" +\n    \n    \n    (\"0\" + m.getHours()).slice(-2) + \":\" +\n    (\"0\" + m.getMinutes()).slice(-2) + \":\" +\n    (\"0\" + m.getSeconds()).slice(-2) + \".\" + m.getMilliseconds();\n\n\n\nmsg.payload = \"The device could not have been restarted. Error cnt is \" + err_cnt + \".\\nDevice is: \" + msg.env_machine_name + \"\\nTime: \" + humanDt;\nmsg.topic = \"Cannot reboot ESP Node-RED.\";\nmsg.from = [{ \"address\": \"noreply@noderednotify.si\", \"name\": \"NodeRed Notifier\" }];\n\nreturn msg;","outputs":1,"noerr":0,"x":390,"y":700,"wires":[["8b25ba2e.dc9b98","51d6cdda.bbe5d4"]]},{"id":"68a889ff.482f38","type":"change","z":"f4e484b9.83c0d8","name":"Get machine name ENV","rules":[{"t":"set","p":"env_machine_name","pt":"msg","to":"NDEVNAME","tot":"env"}],"action":"","property":"","from":"","to":"","reg":false,"x":590,"y":660,"wires":[["f121ec79.5b25"]]},{"id":"68bce1ea.c5795","type":"inject","z":"f4e484b9.83c0d8","name":"ErrorSim","topic":"","payload":"{\"_msgid\":\"33d2c7fa.758448\",\"topic\":\"\",\"payload\":\"Cannot connect to the device! Is device ready?\",\"statusCode\":\"ETIMEDOUT\",\"requesting_node\":\"SensorTaskRefreshRequest\",\"processing_step\":\"Step1: Request temperature read\",\"originalError\":\"Error: connect ETIMEDOUT 192.168.1.241:80 : http://192.168.1.241/control?cmd=event,temperatureQuery\",\"_event\":\"node:66114039.9a4b4\",\"error_kind\":\"request\"}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":900,"wires":[["9d98ac09.17b7c"]]},{"id":"34a84d7b.8880e2","type":"switch","z":"f4e484b9.83c0d8","name":"MailIfOkReboot","property":"did_attempt_reboot","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":960,"y":240,"wires":[["2260e471.7f9f0c"]]},{"id":"a947213b.7c4b5","type":"function","z":"f4e484b9.83c0d8","name":"PrepareRebootOkMail","func":"node.warn(\"I'm in: \" + msg.payload);\nvar err_cnt = msg.payload;\n\nvar m = new Date();\nvar humanDt =\n\n(\"0\" + m.getDate()).slice(-2) + \".\" +\n(\"0\" + (m.getMonth()+1)).slice(-2) + \".\" +\n    m.getFullYear() + \" \" +\n    \n    \n    (\"0\" + m.getHours()).slice(-2) + \":\" +\n    (\"0\" + m.getMinutes()).slice(-2) + \":\" +\n    (\"0\" + m.getSeconds()).slice(-2) + \".\" + m.getMilliseconds();\n\n\n\nmsg.payload = \"The device has been successfully rebooted.\\n\\nError cnt is \" + err_cnt + \".\\nDevice is: \" + msg.env_machine_name + \"\\nTime: \" + humanDt;\nmsg.topic = \"Reboot ESP Node-RED OK\";\nmsg.from = [{ \"address\": \"noreply@noderednotify.si\", \"name\": \"NodeRed Notifier\" }];\n\nreturn msg;","outputs":1,"noerr":0,"x":380,"y":780,"wires":[["51d6cdda.bbe5d4"]]},{"id":"db732ed3.78d19","type":"change","z":"f4e484b9.83c0d8","name":"Reset__did_attempt_reboot","rules":[{"t":"set","p":"did_attempt_reboot","pt":"flow","to":"false","tot":"bool"},{"t":"set","p":"env_machine_name","pt":"msg","to":"NDEVNAME","tot":"env"},{"t":"set","p":"payload","pt":"msg","to":"err_cnt","tot":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":1120,"y":200,"wires":[["2a2005ea.faaf9a"]]},{"id":"2a2005ea.faaf9a","type":"link out","z":"f4e484b9.83c0d8","name":"linkSendToSuccessRebootMail","links":["8961246b.019138"],"x":1275,"y":200,"wires":[]},{"id":"8961246b.019138","type":"link in","z":"f4e484b9.83c0d8","name":"linkReceiveForRebootSuccessMail","links":["2a2005ea.faaf9a"],"x":235,"y":780,"wires":[["a947213b.7c4b5"]]},{"id":"854bda55.5a2698","type":"inject","z":"f4e484b9.83c0d8","name":"SimulateRebootOk","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":650,"y":240,"wires":[["34a84d7b.8880e2"]]},{"id":"314a4e6d.89c3c2","type":"change","z":"f4e484b9.83c0d8","name":"Set__did_attempt_reboot","rules":[{"t":"set","p":"did_attempt_reboot","pt":"flow","to":"true","tot":"bool"},{"t":"set","p":"env_machine_name","pt":"msg","to":"NDEVNAME","tot":"env"}],"action":"","property":"","from":"","to":"","reg":false,"x":1210,"y":280,"wires":[[]]},{"id":"51fce575.02d24c","type":"inject","z":"f4e484b9.83c0d8","name":"Trigger","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1030,"y":280,"wires":[["314a4e6d.89c3c2"]]},{"id":"e95ecdb3.f5842","type":"function","z":"f4e484b9.83c0d8","name":"PrepareDatabaseErrorLog","func":"var errKindMap = {\n    \"request\": 1,\n    \"Reboot OK\": 2,\n    \"Storing\": 3,\n    \"reboot\": 8\n}\n\nvar sqlItems = {\n    $is_error : msg._not_an_error === true?0:1,\n    $processing_step : msg.hasOwnProperty(\"processing_step\")?msg.processing_step:null,\n    $error_kind : msg.hasOwnProperty(\"error_kind\")?errKindMap[msg.error_kind]:0,\n    $payload1: msg.payload\n};\n\ndelete msg._event;\ndelete msg._not_an_error;\ndelete msg.processing_step;\ndelete msg.error_kind;\ndelete msg.payload;\nif (!msg.topic){\n    delete msg.topic;\n}\nvar comparator = {_msgid:msg._msgid};\nif (JSON.stringify(comparator) !== JSON.stringify(msg)){\n    sqlItems.$fullMsg = JSON.stringify(msg);\n}\n\nmsg.params=sqlItems;\n\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":580,"wires":[["3bb60cca.434804"]]},{"id":"3bb60cca.434804","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"prepared","sql":"Insert into espHttpErrors (error_kind, \npayload, \nprocessing_step, \nfullMsg,\nis_error\n)\nvalues ( $error_kind, $payload1, \n$processing_step, \n$fullMsg,\n$is_error);\n\n\n-- CREATE TABLE IF NOT EXISTS ExceptionTable (ErrorNode text, ProcessingStep text, ErrorText text, FriendlyErrorMessage text, Timestamp text);","name":"INShttpErrorToDb","x":790,"y":580,"wires":[[]]},{"id":"1df33d67.f741e3","type":"catch","z":"f4e484b9.83c0d8","name":"CatchDbOpsErrors","scope":["f1473a1c.8c4108","7d98d224.3fff3c","9914c0b6.3227f","603bdf4.8a2662","80ba806a.63b0b","89ef8ee0.f1206","5509caa7.9085b4","3bb60cca.434804","e95ecdb3.f5842","256a170c.bd25e8"],"x":150,"y":940,"wires":[["9d98ac09.17b7c"]]},{"id":"9984209a.b07f1","type":"function","z":"f4e484b9.83c0d8","name":"PrepareLogCopyTesting","func":"\nreturn {payload: \"ESP request was OK, setting error count to 0. did_attempt_reboot val: \" + flow.get(\"did_attempt_reboot\"),\n    error_kind: \"rebootSSSS\",\n    processing_step: \"Staging\",\n    _not_an_error: false\n};","outputs":1,"noerr":0,"x":150,"y":600,"wires":[["e95ecdb3.f5842"]]},{"id":"d284a1ce.35004","type":"inject","z":"f4e484b9.83c0d8","name":"SimLogRebootOk","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":640,"wires":[["9984209a.b07f1"]]},{"id":"9914c0b6.3227f","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"fixed","sql":"create TABLE IF NOT EXISTS espHttpErrors (\n\ttimestamp real default ((julianday('now') - 2440587.5)*86400.0),\n\terror_kind integer,\n\tpayload text,\n\tprocessing_step text,\n\tfullMsg text,\n\tis_error integer CHECK( is_error IN (0,1)),\n\tid integer primary key);","name":"DbSetup_espHttpErrors","x":290,"y":280,"wires":[["f1473a1c.8c4108"]]},{"id":"f1473a1c.8c4108","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"fixed","sql":"create TABLE IF NOT EXISTS errorKinds (\n\tid integer primary key ON CONFLICT IGNORE,\n\terr_kind_value text )","name":"DbSetup_create_errorKinds_EnumTable","x":340,"y":320,"wires":[["80ba806a.63b0b"]]},{"id":"80ba806a.63b0b","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"fixed","sql":"insert into errorKinds values (1, \"request\") ,\n(2, \"Reboot OK\") ,\n(3, \"Storing\") ,\n(8, \"reboot\")","name":"DbSetup_PopulateErrorkind","x":300,"y":360,"wires":[["7d98d224.3fff3c"]]},{"id":"7d98d224.3fff3c","type":"sqlite","z":"f4e484b9.83c0d8","mydb":"62b2bd69.52e9a4","sqlquery":"fixed","sql":"create view if not exists viewEspHttpErrors as select strftime('%d.%m.%Y %H:%M:%f', timestamp, 'unixepoch', 'localtime') as humanTime,\nerr_kind_value, payload, processing_step, fullMsg, is_error, espHttpErrors.id\nfrom espHttpErrors join errorKinds on errorKinds.id = espHttpErrors.error_kind ;","name":"DbSetup_CreateHttpErrView","x":300,"y":400,"wires":[[]]},{"id":"23a003c7.60e10c","type":"file","z":"f4e484b9.83c0d8","name":"WriteDbError","filename":"advancedlogs/dbErrorEvents.txt","appendNewline":true,"createDir":false,"overwriteFile":"false","x":690,"y":940,"wires":[[]]},{"id":"9ba01e38.ddbde","type":"function","z":"f4e484b9.83c0d8","name":"PrepareDbOpsErrorMail","func":"\ntry{\nvar msgPrevious = JSON.stringify(msg);\n}catch(errory){\nvar msgPrevious = \"Unable to JSONize\";\n}\n\nmsg.payload = \"Error happened .. Probably while writing other error info to DB.\\n\\nDevice is: \" + msg.env_machine_name + \"\\nTime: \" + msg.timestamp + \"\\n\\n What was error MSG: \" + msgPrevious + \"\\n\";\nmsg.topic = \"DbOps error\";\nmsg.from = [{ \"address\": \"noreply@noderednotify.si\", \"name\": \"NodeRed Notifier\" }];\n\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":900,"wires":[["23a003c7.60e10c","8fba5f4f.2cd01","51d6cdda.bbe5d4"]]},{"id":"9d98ac09.17b7c","type":"moment","z":"f4e484b9.83c0d8","name":"ProduceSlovenianTimestamp","topic":"","input":"","inputType":"date","inTz":"Europe/Ljubljana","adjAmount":0,"adjType":"days","adjDir":"add","format":"DD.MM.YYYY HH:mm:ss.SSS","locale":"sl_SL","output":"timestamp","outputType":"msg","outTz":"Europe/Ljubljana","x":380,"y":900,"wires":[["3ef70d41.ed87e2"]]},{"id":"8fba5f4f.2cd01","type":"debug","z":"f4e484b9.83c0d8","name":"ToConsole","active":true,"tosidebar":false,"console":true,"tostatus":false,"complete":"payload","x":630,"y":860,"wires":[]},{"id":"3ef70d41.ed87e2","type":"change","z":"f4e484b9.83c0d8","name":"Get machine name ENV","rules":[{"t":"set","p":"env_machine_name","pt":"msg","to":"NDEVNAME","tot":"env"}],"action":"","property":"","from":"","to":"","reg":false,"x":410,"y":940,"wires":[["9ba01e38.ddbde"]]},{"id":"c0cd1fb4.cf977","type":"debug","z":"f4e484b9.83c0d8","name":"","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"params.$txt","x":970,"y":420,"wires":[]},{"id":"fea3b7ef.0e63f8","type":"function","z":"f4e484b9.83c0d8","name":"PrepareSerial","func":"\n\nmsg.payload =  msg.payload + \"\\r\\n\";\nreturn msg;","outputs":1,"noerr":0,"x":1240,"y":820,"wires":[["6706860d.f71c08"]]},{"id":"e062ada0.af1da","type":"inject","z":"f4e484b9.83c0d8","name":"","topic":"","payload":"Settings","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":950,"y":940,"wires":[["fea3b7ef.0e63f8"]]},{"id":"b25fc9e5.8702c8","type":"inject","z":"f4e484b9.83c0d8","name":"SetWifiSsid","topic":"","payload":"WifiSSID,Stormfly's_tail","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":960,"y":900,"wires":[["fea3b7ef.0e63f8"]]},{"id":"a937e3a7.a4d78","type":"inject","z":"f4e484b9.83c0d8","name":"","topic":"","payload":"WifiConnect","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":960,"y":860,"wires":[["fea3b7ef.0e63f8"]]},{"id":"4f49ef6e.53fe3","type":"inject","z":"f4e484b9.83c0d8","name":"","topic":"","payload":"IP,192.168.1.241","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":970,"y":820,"wires":[["fea3b7ef.0e63f8"]]},{"id":"426518ad.64d9c8","type":"inject","z":"f4e484b9.83c0d8","name":"DatabaseWriterToggle","topic":"dCustomLogger","payload":"_LogToggle","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":700,"y":420,"wires":[["1260473f.34bc29"]]},{"id":"1260473f.34bc29","type":"function","z":"f4e484b9.83c0d8","name":"OnOffSwitch_defaultOff","func":"var enabled = context.get('enabled');\nif(enabled == null){\n  enabled = false;\n  node.status({fill:enabled?\"green\":\"red\",shape:\"ring\",text:enabled?\"on\":\"off\"});\n}\nif( (msg.payload === \"_LogToggle\" && msg.topic == \"dCustomLogger\")||(msg.payload === \"event_shutdown\")) {\n    enabled = !enabled;\n    context.set('enabled', enabled);\n    var sText = enabled?\"on\":\"off\";\n    node.status({fill:enabled?\"green\":\"red\",shape:\"ring\",text:sText});\n    return null;\n}\n\nif(!enabled) return null;\nreturn msg;","outputs":1,"noerr":0,"x":750,"y":380,"wires":[["c0cd1fb4.cf977","256a170c.bd25e8"]]},{"id":"51d6cdda.bbe5d4","type":"function","z":"f4e484b9.83c0d8","name":"OnOffSwitch_v2_Q_defaultOff","func":"var enabled = context.get('enabled');\nif(enabled == null){\n  enabled = false;\n  node.status({fill:enabled?\"green\":\"red\",shape:\"ring\",text:enabled?\"on\":\"off\"});\n}\nif(msg.payload === \"_LogToggle\" && msg.topic == \"dCustomLogger\") {\n    enabled = !enabled;\n    context.set('enabled', enabled);\n    var sText = enabled?\"on\":\"off\";\n    node.status({fill:enabled?\"green\":\"red\",shape:\"ring\",text:sText});\n    return null;\n}\n\nif(!enabled) return null;\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":700,"wires":[["e4cafbd4.e0df18"]]},{"id":"8845701a.971f3","type":"inject","z":"f4e484b9.83c0d8","name":"MailsOnOff","topic":"dCustomLogger","payload":"_LogToggle","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":720,"y":740,"wires":[["51d6cdda.bbe5d4"]]},{"id":"825f1161.a4e2","type":"comment","z":"f4e484b9.83c0d8","name":"Serial messages for ESP operations","info":"","x":920,"y":780,"wires":[]},{"id":"576d45dd.5d2c4c","type":"comment","z":"f4e484b9.83c0d8","name":"Debugging item","info":"","x":880,"y":280,"wires":[]},{"id":"62b2bd69.52e9a4","type":"sqlitedb","z":"","db":"$(NWEATHERDB)"},{"id":"97f63480.dc8b68","type":"serial-port","z":"","serialport":"/dev/ttyUSB0","serialbaud":"115200","databits":"8","parity":"none","stopbits":"1","newline":"\\r\\n","bin":"false","out":"char","addchar":false}]